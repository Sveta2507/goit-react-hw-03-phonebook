{"version":3,"sources":["components/Form/Form.module.css","components/List/Items/Items.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/List/Items/Items.js","components/List/List.js","components/Form/Form.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Item","name","number","oops","className","classes","li","p","type","onClick","button","List","contacts","length","map","id","Form","state","handleChange","elem","target","value","setState","handleSubmit","preventDefault","contact","uuidv4","props","addCont","reset","this","onSubmit","form","htmlFor","label","placeholder","onChange","disabled","Component","Filter","input","Section","title","children","section","App","filter","newName","toLowerCase","includes","trim","alert","newState","filterCont","deleteCont","updateCont","persistedTasks","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b509e76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2cEYa\",\"label\":\"Form_label__1nmBC\",\"button\":\"Form_button__gejmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Items_li__1ktCo\",\"p\":\"Items_p__1R_03\",\"button\":\"Items_button__1yPlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1gTrg\",\"label\":\"Filter_label__1RUsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2Amu3\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Items.module.css\";\r\n\r\nconst Item = ({ name, number, oops }) => {\r\n  return (\r\n    <li className={classes.li}>\r\n      <p className={classes.p}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={oops} className={classes.button}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  oops: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Item from \"./Items/Items\";\r\n\r\nconst List = ({ contacts, oops }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.length ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <Item key={id} name={name} number={number} oops={() => oops(id)} />\r\n        ))\r\n      ) : (\r\n        <p>Unfortunately, there is no such contact with the following name!</p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  oops: PropTypes.func.isRequired,\r\n};\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport classes from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (elem) => {\r\n    const { name, value } = elem.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (elem) => {\r\n    elem.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addCont(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={classes.form}>\r\n        <label htmlFor=\"nameInput\" className={classes.label}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Enter the name\"\r\n            onChange={this.handleChange}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\" className={classes.label}>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"Enter the number\"\r\n            onChange={this.handleChange}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className={classes.button}\r\n          disabled={!name.length || !number.length}\r\n        >\r\n          Add a new contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  addCont: PropTypes.func.isRequired,\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label htmlFor=\"filterInput\" className={classes.label}>\r\n      Please type the name of any contact!\r\n      <input\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        className={classes.input}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={classes.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport List from \"./components/List/List\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport Section from \"./components/Section/Section\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"conctacts\");\n    if (persistedTasks) {\n      this.setState({ contacts: JSON.parse(persistedTasks) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"conctacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChange = (elem) => {\n    const { name, value } = elem.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addCont = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      return alert(\n        \"Warning! You are trying to add contact, which has already been added!\"\n      );\n    } else {\n      this.setState((newState) => ({\n        contacts: [...newState.contacts, contact],\n      }));\n    }\n  };\n\n  filterCont = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  deleteCont = (id) => {\n    const { contacts } = this.state;\n    const updateCont = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updateCont],\n    });\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Your PhoneBook\">\n          <Form addCont={this.addCont} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && <Filter onChange={this.handleChange} />}\n          <List contacts={this.filterCont()} oops={this.deleteCont} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}